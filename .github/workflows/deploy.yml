name: Deploy Slidev Presentations

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [main] # Or your default branch

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages # Group by 'pages' to cancel in-progress runs on new commits
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*" # Use the latest LTS Node.js version
          cache: "npm" # Or 'pnpm' or 'yarn' depending on your lockfile

      - name: Setup @antfu/ni # Optional: if you want to use ni
        run: npm i -g @antfu/ni

      - name: Install dependencies
        run:
          nci # This will use npm ci, pnpm install --frozen-lockfile, or yarn install --frozen-lockfile
          # Ensure your single root package.json has @slidev/cli and any themes

      # ---- MODIFIED BUILD LOGIC ----
      - name: Discover and Build presentations
        env:
          # Get the repository name (e.g., your-repo-name)
          GH_PAGES_REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Create the root dist directory
          mkdir -p dist

          # Define the directory containing your presentations
          PRESENTATIONS_DIR="presentations" # Adjust if your presentations are elsewhere, e.g., "presentations"

          # Find presentation subdirectories (assuming each has a slides.md)
          # The sed command extracts the subdirectory name (e.g., "presentation1")
          find "${PRESENTATIONS_DIR}" -mindepth 1 -maxdepth 1 -type d -exec test -f {}/slides.md \; -print | sed "s|^${PRESENTATIONS_DIR}/||" | while read presentation_slug; do
            echo "Building $presentation_slug..."

            # Construct the base path for GitHub Pages (e.g., /your-repo-name/presentation1/)
            BASE_PATH="/${GH_PAGES_REPO_NAME}/${presentation_slug}/"
            
            # Define the output directory for this specific presentation
            OUTPUT_DIR="./dist/${presentation_slug}"

            echo "Input: ${PRESENTATIONS_DIR}/${presentation_slug}/slides.md"
            echo "Base path: ${BASE_PATH}"
            echo "Output directory: ${OUTPUT_DIR}"

            # Build the presentation using 'nr' (from ni) which runs the 'build' script from your package.json
            # Ensure your package.json's "build" script is something like "slidev build"
            # The arguments (entry file, --base, --out) are passed to that script.
            nr build "${PRESENTATIONS_DIR}/${presentation_slug}/slides.md" --base "${BASE_PATH}" --out "${OUTPUT_DIR}"
          done
      # ---- END OF MODIFIED BUILD LOGIC ----
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This path should now contain all presentations in their subdirectories
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build # Depends on the build job completing successfully
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
